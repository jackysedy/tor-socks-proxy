import groovy.json.JsonSlurper

properties([
        parameters([
            choice(name: 'DockerTAG', choices: ChooseImage().join('\n'), description: 'Docker TAGS'),
            string(name: 'Tag', defaultValue: ''),
            string(name: 'Port', defaultValue: ''),
        ])
    ])
def ChooseImage(){
    docker_image_tags_url = "https://hub.docker.com/v2/repositories/jackysedi/tor-socks-proxy/tags/?page_size=20"
    try {
        def http_client = new URL(docker_image_tags_url).openConnection() as HttpURLConnection
        http_client.setRequestMethod('GET')
        http_client.connect()
        def dockerhub_response = [:]    
        if (http_client.responseCode == 200) {
            dockerhub_response = new JsonSlurper().parseText(http_client.inputStream.getText('UTF-8'))
        } else {
            println("HTTP response error")
            System.exit(0)
        }
        def image_tag_list = []
        dockerhub_response.results.each { tag_metadata ->
            image_tag_list.add(tag_metadata.name)    
        }
        return image_tag_list.sort()
    } catch (Exception e) {
             // handle exceptions like timeout, connection errors, etc.
             println(e)
    }
}
node {
    stage("Git"){
        git credentialsId: 'cced35f3-1bac-42ef-81d3-960072464a3b', url: 'https://github.com/jackysedy/tor-socks-proxy'
    }
    stage('chooseDockerTags') {
        if ( currentBuild.rawBuild.getCauses()[0].toString().contains('UserIdCause') ){
            sh """
                sed -i 's/tor-socks-proxy:latest/tor-socks-proxy:${DockerTAG}/g' docker-compose.yml
            """    
            def values = DockerTAG.split('_')
            Port = values[1]
            sh"""
                sed -i 's/XXXX/${Port}/g' docker-compose.yml
            """
        }
        else{
            println "Pulling Tag: $Tag"
            sh """
                sed -i 's/tor-socks-proxy:latest/tor-socks-proxy:${Tag}_${Port}/g' docker-compose.yml
                sed -i 's/XXXX/$Port/g' docker-compose.yml
                
            """
        }
        sh """
            cd test
            docker build --no-cache -t test .
            cd ..
        """
        docker.withRegistry('https://registry.hub.docker.com/v1/repositories/jackysedi/tor-socks-proxy') {
            sh """
                docker-compose up --abort-on-container-exit 
                docker rm test tor-socks-proxy
            """
        }
    }
}
